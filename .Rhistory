shiny::runApp()
histdata <- rnorm(500)
output$plot1 <- renderPlot({
data$x <- histdata[seq_len(input$slider1)]
ggplot2::ggplot(data = data, mapping = aes(x = x)) +
ggplot2::geom_histogram()
#hist(data)
})
data$x <- histdata[seq_len(input$slider1)]
ggplot2::ggplot(data = data, mapping = aes(x = x)) +
ggplot2::geom_histogram()
data$x <- histdata[seq_len(input$slider1)]
data$x <- histdata[seq_len(30)]
data <- histdata[seq_len(30)]
runApp()
runApp()
range(data$x)
range(3:10)
diff(range(3:10))
runApp()
runApp()
library(DT)
runApp()
# Process Item Inputs
N = userdata()$output$IDVar
# Read In Data
userdata <- reactive({
req(input$userfile)
read.csv(input$userfile$datapath)
})
userdata()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(
root.dir = '~/Dropbox/Professional/projects/donders/sem-interrupted/')
set.seed(48409)
suppress.model = '
# Direct Effect
Outcome ~ 0.5*Cause
# Mediators
Item01 ~ 0.2*Cause
Item02 ~ 0.2*Cause
Item03 ~ 0.0*Cause
Item04 ~ 0.0*Cause
Item05 ~ 0.0*Cause
Item06 ~ 0.0*Cause
Item07 ~ 0.0*Cause
Item08 ~ 0.0*Cause
Item09 ~ 0.0*Cause
Item10 ~ 0.0*Cause
Outcome ~ 0.1*Item01
Outcome ~ 0.1*Item02
Outcome ~ 0.0*Item03
Outcome ~ 0.0*Item04
Outcome ~ 0.0*Item05
Outcome ~ 0.0*Item06
Outcome ~ 0.0*Item07
Outcome ~ 0.0*Item08
Outcome ~ 0.0*Item09
Outcome ~ 0.0*Item10
# Item Covariance
Item01 ~~ 0.7*Item02 + 0.3*Item03 + 0.3*Item04 + 0.3*Item05 +
0.3*Item06 + 0.3*Item07 + 0.3*Item08 + 0.3*Item09 + 0.3*Item10
Item02 ~~ 0.3*Item03 + 0.3*Item04 + 0.3*Item05 + 0.3*Item06 +
0.3*Item07 + 0.3*Item08 + 0.3*Item09 + 0.3*Item10
Item03 ~~ 0.7*Item04 + 0.7*Item05 + 0.3*Item06 + 0.3*Item07 +
0.3*Item08 + 0.3*Item09 + 0.3*Item10
Item04 ~~ 0.7*Item05 + 0.3*Item06 + 0.3*Item07 + 0.3*Item08 +
0.3*Item09 + 0.3*Item10
Item05 ~~ 0.3*Item06 + 0.3*Item07 + 0.3*Item08 + 0.3*Item09 +
0.3*Item10
Item06 ~~ 0.7*Item07 + 0.7*Item08 + 0.3*Item09 + 0.3*Item10
Item07 ~~ 0.7*Item08 + 0.3*Item09 + 0.3*Item10
Item08 ~~ 0.7*Item09 + 0.7*Item10
Item09 ~~ 0.7*Item10
'
sem.suppress = simulateData(suppress.model, sample.nobs=500) %>%
mutate(MeanScore = (Item01 + Item02 + Item03 + Item04 + Item05 + Item06 + Item07 +
Item08 + Item09 + Item10) / 10)
packages =  c('dplyr','ggplot2','ggsci','lavaan','semPlot','patchwork',
'stats','MplusAutomation')
if (length(setdiff(packages, rownames(installed.packages()))) > 0) {
install.packages(setdiff(packages, rownames(installed.packages())),
repos = 'http://cran.us.r-project.org')
}
invisible(lapply(packages, library, character.only = TRUE))
source("~/Dropbox/Professional/projects/overview/R_UserFunctions.R")
set.seed(48409)
suppress.model = '
# Direct Effect
Outcome ~ 0.5*Cause
# Mediators
Item01 ~ 0.2*Cause
Item02 ~ 0.2*Cause
Item03 ~ 0.0*Cause
Item04 ~ 0.0*Cause
Item05 ~ 0.0*Cause
Item06 ~ 0.0*Cause
Item07 ~ 0.0*Cause
Item08 ~ 0.0*Cause
Item09 ~ 0.0*Cause
Item10 ~ 0.0*Cause
Outcome ~ 0.1*Item01
Outcome ~ 0.1*Item02
Outcome ~ 0.0*Item03
Outcome ~ 0.0*Item04
Outcome ~ 0.0*Item05
Outcome ~ 0.0*Item06
Outcome ~ 0.0*Item07
Outcome ~ 0.0*Item08
Outcome ~ 0.0*Item09
Outcome ~ 0.0*Item10
# Item Covariance
Item01 ~~ 0.7*Item02 + 0.3*Item03 + 0.3*Item04 + 0.3*Item05 +
0.3*Item06 + 0.3*Item07 + 0.3*Item08 + 0.3*Item09 + 0.3*Item10
Item02 ~~ 0.3*Item03 + 0.3*Item04 + 0.3*Item05 + 0.3*Item06 +
0.3*Item07 + 0.3*Item08 + 0.3*Item09 + 0.3*Item10
Item03 ~~ 0.7*Item04 + 0.7*Item05 + 0.3*Item06 + 0.3*Item07 +
0.3*Item08 + 0.3*Item09 + 0.3*Item10
Item04 ~~ 0.7*Item05 + 0.3*Item06 + 0.3*Item07 + 0.3*Item08 +
0.3*Item09 + 0.3*Item10
Item05 ~~ 0.3*Item06 + 0.3*Item07 + 0.3*Item08 + 0.3*Item09 +
0.3*Item10
Item06 ~~ 0.7*Item07 + 0.7*Item08 + 0.3*Item09 + 0.3*Item10
Item07 ~~ 0.7*Item08 + 0.3*Item09 + 0.3*Item10
Item08 ~~ 0.7*Item09 + 0.7*Item10
Item09 ~~ 0.7*Item10
'
sem.suppress = simulateData(suppress.model, sample.nobs=500) %>%
mutate(MeanScore = (Item01 + Item02 + Item03 + Item04 + Item05 + Item06 + Item07 +
Item08 + Item09 + Item10) / 10)
View(sem.suppress)
dat <- sem.suppress
View(dat)
dat <- sem.suppress %>% select(Cause, Outcome, Item01 - Item10)
dat <- sem.suppress %>% select(Cause, Outcome, Item01-Item10)
dat <- sem.suppress %>% select(Cause, Outcome, Item01:Item10)
names(dat)
names(dat)[1:2] <- c("X","Y")
write.csv(x=dat, file="example-10items.csv", row.names=FALSE)
root.dir
root.dir = '~/Dropbox/Professional/projects/donders/sem-interrupted/'
cov_matrix_camCan <- load(paste0(root.dir, "1.data/2.clean/cov_matrix_camCAN.Rdata"))
load("/Users/ethan/Dropbox/Professional/projects/donders/sem-interrupted/1.data/1.clean/cov_matrix_camCAN.Rdata")
paste0(root.dir, "1.data/2.clean/cov_matrix_camCAN.Rdata"
)
cov_matrix_camCan <- load(paste0(root.dir, "1.data/1.clean/cov_matrix_camCAN.Rdata"))
cov_matrix_camCan <- load(paste0(root.dir, "1.data/1.clean/cov_matrix_camCAN.Rdata"))
gmModel <- "
wb_thickness_T2_lv ~ a1*BPsys
Resid_T2 ~ c*BPsys + b1*wb_volume_T2_lv
indirect1 := a1 * b1
total := c + (a1 * b1)
"
gmFit <- sem(model = gmModel, sample.cov = cov_matrix_camCAN, sample.nobs = 200)
summary(gmFit, standardize = T)
gmModel <- "
wb_thickness_T2_lv ~ a1*BPsys
wb_area_T2_lv ~ a2*BPsys
Resid_T2 ~ c*BPsys + b1*wb_thickness_T2_lv + b2*wb_area_T2_lv
indirect1 := a1 * b1
indirect2 := a2 * b2
total := c + (a1 * b1) + (a2 * b2)
"
gmFit <- sem(model = gmModel, sample.cov = cov_matrix_camCAN, sample.nobs = 200)
summary(gmFit, standardize = T)
simulateData(model = gmFit)
simulateData(parTable(gmFit))
gmDat <- simulateData(parTable(gmFit))
gmDat <- simulateData(parTable(gmFit), nobs = 200)
gmDat <- simulateData(parTable(gmFit), sample.nobs = 200)
View(gmDat)
tesfit <- sem(model = gmModel, data = gmDat)
summary(tesfit)
gmDat <- simulateData(parTable(gmFit), sample.nobs = 200, empirical = T)
tesfit <- sem(model = gmModel, data = gmDat)
summary(tesfit)
Resid_T2 ~ c*BPsys + b1*wb_volume_T2_lv
gmModel <- "
wb_thickness_T2_lv ~ a1*BPsys
Resid_T2 ~ c*BPsys + b1*wb_volume_T2_lv
indirect1 := a1 * b1
total := c + (a1 * b1)
"
names(gmdat) <- c("cortical.thickness", "surface.area", "T2.fluidInt", "systolic.bp")
names(gmDat) <- c("cortical.thickness", "surface.area", "T2.fluidInt", "systolic.bp")
gmDat %>% mutate(volume = cortical.thickness * surface.area) -> gmDat
names(gmDat)[5] = "gm.volume"
gmDat <- gmDat %>% select(systolic.bp, T2.fluidInt, cortical.thickness, surface.area, gm.volume)
View(sem.suppress)
sem.suppress <- cbind(data.frame(id = 1:500), sem.suppress)
View(dat)
dat <- cbind(data.frame(id = 1:500), dat)
write.csv(x=dat, file="example-10items.csv", row.names=FALSE)
View(gmDat)
gmDat <- cbind(data.frame(id = 1:200), gmDat)
gmDat$gm.vol.scaled <- scale(gmDat$gm.volume, center = FALSE)
var(gmDat$gm.volume)
var(gmDat$gm.vol.scaled)
write.csv(gmDat, "./data/example-greymatter.csv", row.names = FALSE)
runApp()
shiny::runApp()
install.packages("tidySEM")
shiny::runApp()
Sys.Date()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shiny)
runApp()
runApp()
base::file.sep
file.path("C:", "Users", "John", "Documents", fsep="\\")
?file.path
.Platform$file.sep
file.path("C:", "Users", "John", "Documents")
file.path("SEMinterrupted-AllOutputs-", nickname(), ".zip")
file.path("SEMinterrupted-AllOutputs-", ".zip")
runApp()
runApp()
runApp()
shiny::runApp()
install.packages("readxls")
shiny::runApp()
runApp()
shiny::runApp()
